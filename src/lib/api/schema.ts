/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/users/me": {
    /** @description 自分の情報を取得します */
    get: operations["getMe"];
  };
  "/users/me/clips": {
    /** @description クリップを取得します */
    get: operations["getMyClips"];
    /** @description クリップを作成します */
    post: operations["postMyClip"];
  };
  "/users/me/clips/:clipId": {
    /** @description クリップを取得します */
    get: operations["getMyClip"];
    /** @description クリップを削除します */
    delete: operations["deleteMyClip"];
    /** @description クリップを更新します */
    patch: operations["patchMyClip"];
  };
  "/users/me/api-keys": {
    /** @description APIキーを登録します */
    post: operations["postMyApiKey"];
    /** @description APIキーを削除します */
    delete: operations["deleteMyApiKey"];
  };
  "/users/me/rss": {
    /** @description 登録されているRSSの一覧を取得します */
    get: operations["getMyRss"];
    /** @description RSSを登録します */
    post: operations["postMyRss"];
    /** @description URLからRSSを削除します */
    delete: operations["deleteMyRss"];
  };
  "/users/me/inboxes": {
    /** @description 受信箱のアイテムの一覧を取得します */
    get: operations["getMyInboxItems"];
    /** @description 受信箱にアイテムを追加します */
    post: operations["postMyInboxItem"];
  };
  "/users/me/inboxes/:itemId": {
    /** @description 受信箱のアイテムを取得します */
    get: operations["getMyInboxItem"];
    /** @description 受信箱のアイテムを削除します */
    delete: operations["deleteMyInboxItem"];
  };
  "/users/me/inboxes/:itemId/move-to-clip": {
    /** @description 受信箱のアイテムをスタックに移動します */
    post: operations["moveMyInboxItemToClip"];
  };
  "/users/me/clips/:clipId/move-to-inbox": {
    /** @description クリップを受信箱に移動します */
    post: operations["moveMyClipToInbox"];
  };
  "/articles/:articleId": {
    /** @description 記事のIDから記事を取得します */
    get: operations["getArticle"];
  };
  "/articles": {
    /** @description 記事のURLから記事を登録します (内容は自動取得されます) */
    post: operations["postArticle"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    User: {
      /** @example 00000000-0000-0000-0000-000000000000 */
      id: string;
      /**
       * Format: email
       * @example me@example.com
       */
      email: string;
      /** @example john_doe */
      name: string | null;
      /** @example John Doe */
      displayName: string | null;
      /**
       * Format: url
       * @example https://example.com/avatar.png
       */
      avatarUrl: string;
      /** @example 2024-01-01T00:00:00.000Z */
      createdAt: string | null;
      /** @example 2024-01-01T00:00:00.000Z */
      updatedAt: string | null;
    };
    Article: {
      /** @example 1 */
      id: number;
      /**
       * Format: url
       * @example https://example.com/article
       */
      url: string;
      /** @example Example Article */
      title: string;
      /** @example This is an example article. */
      body: string;
      /**
       * Format: url
       * @example https://example.com/og-image.png
       */
      ogImageUrl: string | null;
      /** @example This is a summary. */
      summary: string | null;
      /** @example 2024-01-01T00:00:00.000Z */
      createdAt: string | null;
      /** @example 2024-01-01T00:00:00.000Z */
      updatedAt: string | null;
    };
    ClipWithArticle: {
      /** @example 1 */
      id: number;
      /** @example 0 */
      status: 0 | 1 | 2;
      /** @example 50 */
      progress: number;
      /** @example This is a comment. */
      comment: string | null;
      /** @example 1 */
      articleId: number;
      /** @example 00000000-0000-0000-0000-000000000000 */
      userId: string;
      /** @example 2024-01-01T00:00:00.000Z */
      createdAt: string | null;
      /** @example 2024-01-01T00:00:00.000Z */
      updatedAt: string | null;
      article: components["schemas"]["Article"];
    };
    Clip: {
      /** @example 1 */
      id: number;
      /** @example 0 */
      status: 0 | 1 | 2;
      /** @example 50 */
      progress: number;
      /** @example This is a comment. */
      comment: string | null;
      /** @example 1 */
      articleId: number;
      /** @example 00000000-0000-0000-0000-000000000000 */
      userId: string;
      /** @example 2024-01-01T00:00:00.000Z */
      createdAt: string | null;
      /** @example 2024-01-01T00:00:00.000Z */
      updatedAt: string | null;
    };
    RssItem: {
      /**
       * Format: uri
       * @example https://example.com/rss
       */
      url: string;
      /** @example 00000000-0000-0000-0000-000000000000 */
      userId: string;
      /** @example My RSS Feed */
      name: string | null;
      /** @example 2024-01-01T00:00:00.000Z */
      createdAt: string | null;
      /** @example 2024-01-01T00:00:00.000Z */
      updatedAt: string | null;
    };
    InboxItemWithArticle: {
      /** @example 1 */
      id: number;
      /** @example 00000000-0000-0000-0000-000000000000 */
      userId: string;
      /** @example 1 */
      articleId: number;
      /** @example 2024-01-01T00:00:00.000Z */
      createdAt: string | null;
      /** @example 2024-01-01T00:00:00.000Z */
      updatedAt: string | null;
      article: components["schemas"]["Article"];
    };
    InboxItem: {
      /** @example 1 */
      id: number;
      /** @example 00000000-0000-0000-0000-000000000000 */
      userId: string;
      /** @example 1 */
      articleId: number;
      /** @example 2024-01-01T00:00:00.000Z */
      createdAt: string | null;
      /** @example 2024-01-01T00:00:00.000Z */
      updatedAt: string | null;
    };
  };
  responses: never;
  parameters: {
  };
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /** @description 自分の情報を取得します */
  getMe: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["User"];
        };
      };
      /** @description Bad Request */
      400: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
      /** @description Internal Server Error */
      500: {
        content: never;
      };
    };
  };
  /** @description クリップを取得します */
  getMyClips: {
    parameters: {
      query?: {
        /** @description クリップの未読ステータス */
        readStatus?: "all" | "read" | "unread";
        /** @description クリップの検索クエリ */
        text?: string;
        /** @description 取得するクリップの数 */
        limit?: string;
        /** @description 取得するクリップのオフセット */
        offset?: string;
        /** @description 取得するクリップの作成日時の上限 */
        before?: string;
        /** @description 取得するクリップの作成日時の下限 */
        after?: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": {
            clips: components["schemas"]["ClipWithArticle"][];
            /**
             * @description これ以上取得できるクリップがないかどうか
             * @example false
             */
            finished: boolean;
          };
        };
      };
      /** @description Bad Request */
      400: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
      /** @description Internal Server Error */
      500: {
        content: never;
      };
    };
  };
  /** @description クリップを作成します */
  postMyClip: {
    requestBody?: {
      content: {
        "application/json": {
          /** @enum {string} */
          type?: "id";
          articleId: number;
        } | {
          /** @enum {string} */
          type: "url";
          /** Format: uri */
          articleUrl: string;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": {
            clip: components["schemas"]["ClipWithArticle"];
          };
        };
      };
      /** @description Bad Request */
      400: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Internal Server Error */
      500: {
        content: never;
      };
    };
  };
  /** @description クリップを取得します */
  getMyClip: {
    parameters: {
      path: {
        /** @description クリップのID */
        clipId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": {
            clip: components["schemas"]["ClipWithArticle"];
          };
        };
      };
      /** @description Bad Request */
      400: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
      /** @description Internal Server Error */
      500: {
        content: never;
      };
    };
  };
  /** @description クリップを削除します */
  deleteMyClip: {
    parameters: {
      path: {
        /** @description クリップのID */
        clipId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": {
            clip: components["schemas"]["Clip"];
          };
        };
      };
      /** @description Bad Request */
      400: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
      /** @description Internal Server Error */
      500: {
        content: never;
      };
    };
  };
  /** @description クリップを更新します */
  patchMyClip: {
    parameters: {
      path: {
        /** @description 更新するクリップのID */
        clipId: string;
      };
    };
    requestBody?: {
      content: {
        "application/json": {
          /**
           * @description 更新するクリップの情報
           * @example {
           *   "status": 1,
           *   "progress": 50,
           *   "comment": "コメント"
           * }
           */
          clip: {
            /**
             * @description クリップの状態 (0: 未読, 1: 読み中, 2: 読了)
             * @example 1
             */
            status?: number;
            /**
             * @description クリップの読了率 (0 ~ 100)
             * @example 50
             */
            progress?: number;
            /**
             * @description クリップに対するコメント
             * @example コメント
             */
            comment?: string;
          };
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": {
            clip: components["schemas"]["Clip"];
          };
        };
      };
      /** @description Bad Request */
      400: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
      /** @description Internal Server Error */
      500: {
        content: never;
      };
    };
  };
  /** @description APIキーを登録します */
  postMyApiKey: {
    requestBody?: {
      content: {
        "application/json": {
          /**
           * @description APIキー
           * @example mskeuv73bn2vbc6396ngnbv7
           */
          apiKey: string;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
      /** @description Bad Request */
      400: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
      /** @description Internal Server Error */
      500: {
        content: never;
      };
    };
  };
  /** @description APIキーを削除します */
  deleteMyApiKey: {
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
      /** @description Internal Server Error */
      500: {
        content: never;
      };
    };
  };
  /** @description 登録されているRSSの一覧を取得します */
  getMyRss: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": {
            rss: components["schemas"]["RssItem"][];
          };
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Internal Server Error */
      500: {
        content: never;
      };
    };
  };
  /** @description RSSを登録します */
  postMyRss: {
    requestBody?: {
      content: {
        "application/json": {
          /**
           * Format: uri
           * @example https://example.com/rss
           */
          url: string;
          /** @example My RSS Feed */
          name: string | null;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": {
            rss: components["schemas"]["RssItem"];
          };
        };
      };
      /** @description Bad Request */
      400: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Internal Server Error */
      500: {
        content: never;
      };
    };
  };
  /** @description URLからRSSを削除します */
  deleteMyRss: {
    requestBody?: {
      content: {
        "application/json": {
          /**
           * @description 削除するRSSのURL
           * @example https://example.com/feed
           */
          url: string;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": {
            rss: components["schemas"]["RssItem"];
          };
        };
      };
      /** @description Bad Request */
      400: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
      /** @description Internal Server Error */
      500: {
        content: never;
      };
    };
  };
  /** @description 受信箱のアイテムの一覧を取得します */
  getMyInboxItems: {
    parameters: {
      query?: {
        /** @description 取得するアイテムの数 */
        limit?: string;
        /** @description 取得するアイテムのオフセット */
        offset?: string;
        /** @description 取得するアイテムの作成日時の上限 */
        before?: string;
        /** @description 取得するアイテムの作成日時の下限 */
        after?: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": {
            items: components["schemas"]["InboxItemWithArticle"][];
            /**
             * @description これ以上取得できるアイテムがないかどうか
             * @example false
             */
            finished: boolean;
          };
        };
      };
      /** @description Bad Request */
      400: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
      /** @description Internal Server Error */
      500: {
        content: never;
      };
    };
  };
  /** @description 受信箱にアイテムを追加します */
  postMyInboxItem: {
    requestBody?: {
      content: {
        "application/json": {
          /** @enum {string} */
          type?: "id";
          articleId: number;
        } | {
          /** @enum {string} */
          type: "url";
          /** Format: uri */
          articleUrl: string;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": {
            item: components["schemas"]["InboxItem"];
          };
        };
      };
      /** @description Bad Request */
      400: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Internal Server Error */
      500: {
        content: never;
      };
    };
  };
  /** @description 受信箱のアイテムを取得します */
  getMyInboxItem: {
    parameters: {
      path: {
        /** @description アイテムのID */
        itemId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": {
            item: components["schemas"]["InboxItem"];
          };
        };
      };
      /** @description Bad Request */
      400: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
      /** @description Internal Server Error */
      500: {
        content: never;
      };
    };
  };
  /** @description 受信箱のアイテムを削除します */
  deleteMyInboxItem: {
    parameters: {
      path: {
        /** @description アイテムのID */
        itemId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": {
            item: components["schemas"]["InboxItem"];
          };
        };
      };
      /** @description Bad Request */
      400: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
      /** @description Internal Server Error */
      500: {
        content: never;
      };
    };
  };
  /** @description 受信箱のアイテムをスタックに移動します */
  moveMyInboxItemToClip: {
    parameters: {
      path: {
        /** @description アイテムのID */
        itemId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": {
            clip: components["schemas"]["Clip"];
          };
        };
      };
      /** @description Bad Request */
      400: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
      /** @description Internal Server Error */
      500: {
        content: never;
      };
    };
  };
  /** @description クリップを受信箱に移動します */
  moveMyClipToInbox: {
    parameters: {
      path: {
        /** @description クリップのID */
        clipId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": {
            item: components["schemas"]["InboxItem"];
          };
        };
      };
      /** @description Bad Request */
      400: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
      /** @description Internal Server Error */
      500: {
        content: never;
      };
    };
  };
  /** @description 記事のIDから記事を取得します */
  getArticle: {
    parameters: {
      path: {
        /** @description 記事のID */
        articleId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": {
            article: components["schemas"]["Article"];
          };
        };
      };
      /** @description Bad Request */
      400: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
      /** @description Internal Server Error */
      500: {
        content: never;
      };
    };
  };
  /** @description 記事のURLから記事を登録します (内容は自動取得されます) */
  postArticle: {
    requestBody?: {
      content: {
        /**
         * @example {
         *   "url": "https://example.com/slug"
         * }
         */
        "application/json": {
          /**
           * Format: uri
           * @example https://example.com/slug
           */
          url: string;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": {
            article: components["schemas"]["Article"];
          };
        };
      };
      /** @description Bad Request */
      400: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
      /** @description Internal Server Error */
      500: {
        content: never;
      };
    };
  };
}
